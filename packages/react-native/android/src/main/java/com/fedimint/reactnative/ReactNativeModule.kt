// Generated by uniffi-bindgen-react-native
package com.fedimint.reactnative

import com.facebook.react.bridge.ReactApplicationContext
import com.facebook.react.module.annotations.ReactModule
import com.facebook.react.turbomodule.core.interfaces.CallInvokerHolder

@ReactModule(name = ReactNativeModule.NAME)
class ReactNativeModule(reactContext: ReactApplicationContext) :
  NativeReactNativeSpec(reactContext) {

  override fun getName(): String {
    return NAME
  }


  // Initialize CallInvoker during module setup
  override fun initialize() {
    super.initialize()
    val callInvokerHolder = reactApplicationContext.jsCallInvokerHolder
    if (callInvokerHolder != null) {
      nativeSetCallInvoker(callInvokerHolder)
    }
  }

  // Two native methods implemented in cpp-adapter.cpp, and ultimately
  // fedimint-react-native.cpp

  external fun nativeSetCallInvoker(callInvokerHolder: Any)
  external fun nativeInstallRustCrate(runtimePointer: Long): Boolean
  external fun nativeCleanupRustCrate(runtimePointer: Long): Boolean

  override fun installRustCrate(): Boolean {
    val context = this.reactApplicationContext
    return nativeInstallRustCrate(
      context.javaScriptContextHolder!!.get()
    )
  }

  override fun cleanupRustCrate(): Boolean {
    return nativeCleanupRustCrate(
      this.reactApplicationContext.javaScriptContextHolder!!.get()
    )
  }

  companion object {
    const val NAME = "ReactNative"

    init {
      System.loadLibrary("fedimint-react-native")
    }
  }
}